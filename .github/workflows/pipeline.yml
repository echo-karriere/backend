name: Pipeline

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  docker_image: ghcr.io/echo-karriere/backend:${{ github.sha }}

jobs:
  check-build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: jdbc:postgresql://localhost:32789/test_db

    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: karriere
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 32789:5432

    steps:
      - uses: actions/checkout@v2

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1

      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 16
          # cache: gradle TODO: Enable once released

      - name: Check
        run: ./gradlew check --info

      - name: Build
        run: ./gradlew build

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: backend
          path: "${{ github.workspace }}/build/libs/*.jar"

      - name: SonarQube analysis
        if: ${{ false }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube --info --stacktrace

      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

  docker:
    needs: [ check-build ]
    if: ${{ github.ref =='refs/heads/main' || github.ref == 'refs/heads/production' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: backend

      - name: Build
        run: docker image build --tag ${docker_image} .

      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: docker push ${docker_image}

  deploy-dev:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [ docker ]
    environment:
      name: "dev"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: backend

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "echokarriere"
          slot-name: "dev"
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_6732f46e467045c59d6c94cd23483738 }}
          package: "*.jar"
