name: Pipeline

on:
  push:
    branches:
      - bootify

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: jdbc:postgresql://localhost:32789/test_db

    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: karriere
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 32789:5432

    steps:
      - uses: actions/checkout@v2

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1

      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: /root/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Check
        run: ./gradlew check --info

      - name: SonarQube analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonarqube --info
  deploy-dev:
    runs-on: ubuntu-latest
    needs: [ tests ]

    steps:
      - uses: actions/checkout@master

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Build
        run: ./gradlew build --info

      - uses: azure/docker-login@v1
        with:
          login-server: https://echokarriere.azurecr.io/
          username: ${{ secrets.AzureAppService_ContainerUsername_2476a2a1b4f34eb692445ad9d2af5cf6 }}
          password: ${{ secrets.AzureAppService_ContainerPassword_22751274f8954b79a8a085b6c5aeaa8e }}

      - run: |
          docker build . -t echokarriere.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_2476a2a1b4f34eb692445ad9d2af5cf6 }}/backend:dev
          docker push echokarriere.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_2476a2a1b4f34eb692445ad9d2af5cf6 }}/backend:dev

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'echokarriere'
          slot-name: 'dev'
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_0d44f657b2d24d50a2bc89c7d7415749 }}
          images: 'echokarriere.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_2476a2a1b4f34eb692445ad9d2af5cf6 }}/backend:dev'
